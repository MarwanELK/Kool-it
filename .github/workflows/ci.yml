name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    # Etape 1: Tests automatisés
    - name: Navigate to frontend_koolit directory
      run: cd frontend_koolit
      
    - name: Install Angular CLI
      run: npm install -g @angular/cli
      
    - name: Install dependencies and fix vulnerabilities
      run: |
        npm install leaflet --force
        npm install file-saver --force
        npm audit fix --force
        npm install file-saver --force
        npm install --save-dev @types/file-saver --force
        npm audit fix --force
        npm i --save-dev @types/leaflet --force
        npm audit fix --force

    - name: Run frontend tests
      run: |
        cd ..
        cd Kool-it
        cd frontend_koolit
        npm install
        ng test
      
    - name: Return to root directory
      run: cd ..
      
    - name: Navigate to backend_koolit directory
      run: cd backend_koolit
    
    - name: Run backend tests
      run: ng test
        
    # Etape 2: Intégration continue
    - name: Continuous Integration
      run: |
        # Commande pour intégrer les modifications de code en toute sécurité
        # Cette étape peut inclure des vérifications supplémentaires telles que la compilation, les linters, etc.
        echo "Continuous Integration..."
        # Insérez vos commandes CI ici
        
    # Etape 3: Gestion des dépendances
    - name: Install dependencies
      run: |
        echo "Installing frontend dependencies..."
        npm install
        echo "Installing backend dependencies..."
        mvn dependency:resolve
        
    # Etape 4: Maintenance de la qualité du code
    - name: Frontend code quality check
      run: |
        # Commande pour vérifier la qualité du code pour le front-end (ex: ESLint)
        echo "Checking frontend code quality..."
        # Insérez vos commandes pour la vérification de la qualité du code du front-end ici
        
    - name: Backend code quality check
      run: |
        # Commande pour vérifier la qualité du code pour le back-end (ex: Checkstyle)
        echo "C
